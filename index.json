{"repository_name":"tsh-cr","body":"[![Examples](https://github.com/D-Shwagginz/tsh-cr/actions/workflows/build-examples.yml/badge.svg)](https://github.com/D-Shwagginz/tsh-cr/actions/workflows/build-examples.yml)\n[![Spec](https://github.com/D-Shwagginz/tsh-cr/actions/workflows/spec.yml/badge.svg)](https://github.com/D-Shwagginz/tsh-cr/actions/workflows/spec.yml)\n\n[![Static Badge](https://img.shields.io/badge/Check%20The-Docs-blue)](https://d-shwagginz.github.io/tsh-cr/)\n\n# T(wenty) S(ix) h(undred) - Cr(ystal)\n\nAn easy to use game library focused on creating 2d games\nin the style of Atari 2600 games (1977) up to Gameboy games (1989)\n\n## Installation\n\n1. Run your specific platform's install script located in `rsrc/`\n   Make sure to run these from inside the tsh-cr repo folder,\n   not from inside the `rsrc` folder itself\n\n- If on windows you will need to run these to setup your work environment:\n  - Powershell\n    ```powershell\n    $env:LIB=\"${env:LIB};C:\\tsh-cr\"\n    $env:PATH=\"${env:PATH};C:\\tsh-cr\"\n    ```\n  - Or cmd\n    ```cmd\n    set PATH=%PATH%;C:\\tsh-cr\n    set LIB=%LIB%;C:\\tsh-cr\n    ```\n\n2. Add `tsh-cr` to your `shard.yml`:\n```yml\ndependencies:\n  tsh-cr:\n    github: D-Shwagginz/tsh-cr\n```\n\n3. Run `shards update`\n\n## Usage\n\nTsh-cr uses a class called PlayThings to preform\nvarious game tasks such as managing sprites,\nposition, animation, as well as collision.\n\nPlease visit the examples for a showcase of how to better apply Tsh-cr\n\n### A simple game loop\n\nTsh-cr's main loop is it's `Tsh.play(title, width, height, colors)` function.<br>\nTitle will be the title of the window, width and height are the resolutions\nof the **internal** screen, not the window itself, and colors is an array\nthat acts as a palette for all sprites. By default, all colors in the engine are black.\n\n```crystal\nrequire \"tsh-cr\"\n\nTsh.play(\"Hello World!\", 50, 50, [Tsh::BLANK, Tsh::WHITE]) do\n  # Update code\nend\n```\n\n### Creating a PlayThing\n\nPlayThings are the basis of Tsh-cr and can be created very simply.\n\n```crystal\nTsh::PlayThing.new(\n  x: 12,\n  y: 5,\n)\n```\n\nNow right now this PlayThing will do nothing when `Tsh.play()` is called.\nIt has no collision callbacks nor any sprites to draw. It will also\nnever be destroyed since it is not set to a variable or destroyed\nin a collision function.<br>\n\n### Drawing a PlayThing\n\n```crystal\nsmile = Tsh::PlayThing.new(\n  sprites: [\n    Tsh::Sprite.new([\n      [1, 0, 0, 0, 0, 1],\n      [0],\n      [1, 0, 0, 0, 0, 1],\n      [0, 1, 1, 1, 1],\n    ]),\n  ]\n)\n\nTsh.play(\"Drawing\", 40, 40, [Tsh::BLANK, Tsh::BLUE]) do\nend\n```\n\nThis will create a smiley face in the lower left corner of the\nscreen since we don't set the PlayThings x or y. Playthings are bottom-left centered,\nmeaning that all sprites will extend towards the top right.\n\nAs you can see, sprites are set as an array in the PlayThing. `Tsh::PlayThing.sprite` is the\ncurrent sprite in that array to display. Eacg sprite is an array (rows) of arrays (columns)\nof numbers. The numbers map to their respective index in `Tsh.colors` which we set to be blank and blue,\nmeaning that our smiley face will be shown as blue.\n\n### Making sounds\n\nTsh-cr uses SunVox to creates it's sounds.\n\nA sound is a collection of notes, which themselves are a collection of tones and the length to play them for.<br>\nA tone is a musical note, and the waveform to play it on.\n\nCurrently there are 8 waveforms: Triangle, Saw, Square, Noise, Sin, HSin, ASin, and PSin.<br>\nThe tones in a note can play one musical note on any of these 8 at the same time.\n\nThere is currently support for a max of 16 sounds to play at once, with a tone playing on each waveform in\nevery sound's current note. If you play more than 16 sounds, the oldest sound will be stopped and the new sound\nwill be played in its place.\n\n```crystal\nsound = Tsh::Sound.new(\n  [\n    Tsh::Sound::Note.new([Tsh::Sound::Tone.new(Tsh::Note::C2, Tsh::Sound::Tone::Waveform::Triangle),\n                          Tsh::Sound::Tone.new(Tsh::Note::G4, Tsh::Sound::Tone::Waveform::Noise),\n    ], 1.0),\n    Tsh::Sound::Note.new([Tsh::Sound::Tone.new(Tsh::Note::F5, Tsh::Sound::Tone::Waveform::Triangle)], 1.0),\n    Tsh::Sound::Note.new([Tsh::Sound::Tone.new(Tsh::Note::A3, Tsh::Sound::Tone::Waveform::Square)], 1.0),\n  ]\n)\n\nsound_played = false\n\nTsh.play(\"Sounds\", 40, 40) do\n  if !sound_played\n    sound_played = true\n    sound.play\n  end\nend\n```\n\nPlaying over 8 tones in one note or playing the same waveform more in more than one tone in a note\nwill cause unexpected and possibly audio-breaking results. However it is allowed so feel free to experiment.\n\nFor something like music which might require multiple of the same waveform, try to use multiple sounds\nand treat them as layers. The NES had 5 channels and only 2 of them were the same waveform. If you want\nto play tones at times different from others in music, you would also need to use \"layered\" sounds.\n\n### Examples\n\nIn the examples folder you will find ways to use collision, movement,\nanimation, sound, as well as a simple space invaders clone.\n\n## Contributing\n\n1. Fork it (<https://github.com/D-Shwagginz/tsh-cr/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Devin Shwagginz](https://github.com/D-Shwagginz) - Creator and maintainer\n\n## Special Thanks\n\n- [raysan5](https://github.com/raysan5) - Creator of Raylib\n- [Alexander Zolotov](https://warmplace.ru) - Creator of SunVox\n- [Ian Rash](https://github.com/sol-vin) - Created Crystal bindings for SunVox and Raylib","program":{"html_id":"tsh-cr/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"tsh-cr","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"tsh-cr/Tsh","path":"Tsh.html","kind":"module","full_name":"Tsh","name":"Tsh","abstract":false,"locations":[{"filename":"src/colors.cr","line_number":21,"url":null},{"filename":"src/engine.cr","line_number":24,"url":null},{"filename":"src/plaything.cr","line_number":22,"url":null},{"filename":"src/sounds.cr","line_number":22,"url":null},{"filename":"src/tsh-cr.cr","line_number":27,"url":null}],"repository_name":"tsh-cr","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"COLOR_COUNT","name":"COLOR_COUNT","value":"32","doc":"The size of `Tsh.colors`","summary":"<p>The size of <code><a href=\"Tsh.html#colors%3AColors-class-method\">Tsh.colors</a></code></p>"},{"id":"MAX_SOUNDS","name":"MAX_SOUNDS","value":"16","doc":"The maximum amount of sound that can play at the same time. 1-16","summary":"<p>The maximum amount of sound that can play at the same time.</p>"},{"id":"VERSION","name":"VERSION","value":"\"0.2.0\""}],"doc":"## The T(hirty) S(ix) h(undred) engine\n\n The primary module for the engine.\n\n `Tsh.play()` and `Tsh::PlayThing` are the most\n used parts of the engine.","summary":"<h2><a id=\"the-thirty-six-hundred-engine\" class=\"anchor\" href=\"#the-thirty-six-hundred-engine\">  <svg class=\"octicon-link\" aria-hidden=\"true\">\n    <use href=\"#octicon-link\"/>\n  </svg>\n</a>The T(hirty) S(ix) h(undred) engine</h2>","class_methods":[{"html_id":"background_color:Raylib::Color-class-method","name":"background_color","doc":"The background color for the screen","summary":"<p>The background color for the screen</p>","abstract":false,"location":{"filename":"src/engine.cr","line_number":30,"url":null},"def":{"name":"background_color","return_type":"Raylib::Color","visibility":"Public","body":"@@background_color"}},{"html_id":"background_color=(background_color:Raylib::Color)-class-method","name":"background_color=","doc":"The background color for the screen","summary":"<p>The background color for the screen</p>","abstract":false,"args":[{"name":"background_color","external_name":"background_color","restriction":"Raylib::Color"}],"args_string":"(background_color : Raylib::Color)","args_html":"(background_color : Raylib::Color)","location":{"filename":"src/engine.cr","line_number":30,"url":null},"def":{"name":"background_color=","args":[{"name":"background_color","external_name":"background_color","restriction":"Raylib::Color"}],"visibility":"Public","body":"@@background_color = background_color"}},{"html_id":"check_collisions-class-method","name":"check_collisions","doc":"Runs all collision checks","summary":"<p>Runs all collision checks</p>","abstract":false,"location":{"filename":"src/engine.cr","line_number":55,"url":null},"def":{"name":"check_collisions","visibility":"Public","body":"if @@playthings.size > 1\n  @@playthings[0..-2].each.with_index do |pt, i|\n    if pt.sprite == -1\n      next\n    end\n    pt_box = Raylib::Rectangle.new(x: pt.x, y: pt.y, width: pt.sprites[pt.sprite].width, height: pt.sprites[pt.sprite].height)\n    @@playthings[(i + 1)..].each do |other|\n      if other.sprite == -1\n        next\n      end\n      other_box = Raylib::Rectangle.new(x: other.x, y: other.y, width: other.sprites[other.sprite].width, height: other.sprites[other.sprite].height)\n      if Raylib.check_collision_recs?(pt_box, other_box)\n        pt.on_collide.call(pt, other)\n        other.on_collide.call(other, pt)\n        if !(pt.colliders.includes?(other))\n          pt.colliders << other\n          pt.on_collide_start.call(pt, other)\n        end\n        if !(other.colliders.includes?(pt))\n          other.colliders << pt\n          other.on_collide_start.call(other, pt)\n        end\n      else\n        if pt.colliders.includes?(other)\n          pt.colliders.delete(other)\n          pt.on_collide_end.call(pt, other)\n        end\n        if other.colliders.includes?(pt)\n          other.colliders.delete(pt)\n          other.on_collide_start.call(other, pt)\n        end\n      end\n    end\n  end\nend"}},{"html_id":"colors:Colors-class-method","name":"colors","doc":"A static array of `Tsh::Color` of size `COLOR_COUNT`","summary":"<p>A static array of <code>Tsh::Color</code> of size <code><a href=\"Tsh.html#COLOR_COUNT\">COLOR_COUNT</a></code></p>","abstract":false,"location":{"filename":"src/colors.cr","line_number":92,"url":null},"def":{"name":"colors","return_type":"Colors","visibility":"Public","body":"@@colors"}},{"html_id":"delta_time:Float64-class-method","name":"delta_time","doc":"Returns the time since the last frame rendered","summary":"<p>Returns the time since the last frame rendered</p>","abstract":false,"location":{"filename":"src/engine.cr","line_number":50,"url":null},"def":{"name":"delta_time","return_type":"Float64","visibility":"Public","body":"return Raylib.get_frame_time"}},{"html_id":"destroy_all_playthings-class-method","name":"destroy_all_playthings","doc":"Destroys every PlayThing","summary":"<p>Destroys every PlayThing</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":38,"url":null},"def":{"name":"destroy_all_playthings","visibility":"Public","body":"@@playthings.each(&.destroy)"}},{"html_id":"game_time:Float64-class-method","name":"game_time","doc":"Returns the time since the game started","summary":"<p>Returns the time since the game started</p>","abstract":false,"location":{"filename":"src/engine.cr","line_number":45,"url":null},"def":{"name":"game_time","return_type":"Float64","visibility":"Public","body":"return Raylib.get_time"}},{"html_id":"key_down?(key:Key):Bool-class-method","name":"key_down?","doc":"Checks if a key is currently down","summary":"<p>Checks if a key is currently down</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"}],"args_string":"(key : Key) : Bool","args_html":"(key : <a href=\"Tsh/Key.html\">Key</a>) : Bool","location":{"filename":"src/engine.cr","line_number":35,"url":null},"def":{"name":"key_down?","args":[{"name":"key","external_name":"key","restriction":"Key"}],"return_type":"Bool","visibility":"Public","body":"return Raylib.key_down?(key)"}},{"html_id":"key_pressed?(key:Key):Bool-class-method","name":"key_pressed?","doc":"Checks if a key has been pressed","summary":"<p>Checks if a key has been pressed</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Key"}],"args_string":"(key : Key) : Bool","args_html":"(key : <a href=\"Tsh/Key.html\">Key</a>) : Bool","location":{"filename":"src/engine.cr","line_number":40,"url":null},"def":{"name":"key_pressed?","args":[{"name":"key","external_name":"key","restriction":"Key"}],"return_type":"Bool","visibility":"Public","body":"return Raylib.key_pressed?(key)"}},{"html_id":"play(title:String,res_x:UInt32,res_y:UInt32,colors:Array(Tsh::Color)=[]ofTsh::Color,&)-class-method","name":"play","doc":"Starts the engine.\nYields a block to update the game","summary":"<p>Starts the engine.</p>","abstract":false,"args":[{"name":"title","external_name":"title","restriction":"String"},{"name":"res_x","external_name":"res_x","restriction":"UInt32"},{"name":"res_y","external_name":"res_y","restriction":"UInt32"},{"name":"colors","default_value":"[] of Tsh::Color","external_name":"colors","restriction":"Array(Tsh::Color)"}],"args_string":"(title : String, res_x : UInt32, res_y : UInt32, colors : Array(Tsh::Color) = [] of Tsh::Color, &)","args_html":"(title : String, res_x : UInt32, res_y : UInt32, colors : Array(Tsh::Color) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Tsh</span><span class=\"t\">::</span><span class=\"t\">Color</span>, &)","location":{"filename":"src/engine.cr","line_number":114,"url":null},"def":{"name":"play","args":[{"name":"title","external_name":"title","restriction":"String"},{"name":"res_x","external_name":"res_x","restriction":"UInt32"},{"name":"res_y","external_name":"res_y","restriction":"UInt32"},{"name":"colors","default_value":"[] of Tsh::Color","external_name":"colors","restriction":"Array(Tsh::Color)"}],"yields":0,"block_arity":0,"visibility":"Public","body":"@@res_x = res_x\n@@res_y = res_y\ncolors.each.with_index do |color, i|\n  if i >= Tsh.colors.size\n    break\n  end\n  Tsh.set_color(i, color)\nend\nRaylib.set_trace_log_level(Raylib::TraceLogLevel::Error)\nRaylib.set_config_flags(Raylib::ConfigFlags::WindowResizable | Raylib::ConfigFlags::VSyncHint)\nRaylib.init_window(640, 480, title)\nRaylib.set_window_min_size(@@res_x, @@res_y)\nscreen : Raylib::RenderTexture = Raylib.load_render_texture(@@res_x, @@res_y)\nRaylib.set_texture_filter(screen.texture, Raylib::TextureFilter::Point)\nRaylib.set_target_fps(60)\nsound_init()\nwhile !Raylib.close_window?\n  @@playing_sounds.each do |sound|\n    sound.update\n  end\n  @@playthings.each do |pt|\n    if pt.flipbook.active\n      pt.flipbook.update\n    end\n  end\n  yield\n  check_collisions\n  Tsh.playthings_to_destroy.each do |pt|\n    Tsh.playthings.delete(pt)\n  end\n  Tsh.playthings_to_destroy.clear\n  scale_width = Raylib.get_screen_width / @@res_x\n  scale_height = Raylib.get_screen_height / @@res_y\n  scale = scale_width < scale_height ? scale_width : scale_height\n  Raylib.begin_texture_mode(screen)\n  Raylib.clear_background(background_color)\n  @@playthings.each(&.draw)\n  Raylib.end_texture_mode\n  Raylib.begin_drawing\n  Raylib.clear_background(Raylib::BLACK)\n  Raylib.draw_texture_pro(screen.texture, Raylib::Rectangle.new(width: screen.texture.width, height: screen.texture.height), Raylib::Rectangle.new(x: (Raylib.get_screen_width - (@@res_x * scale)) * 0.5, y: (Raylib.get_screen_height - (@@res_y * scale)) * 0.5, width: @@res_x * scale, height: @@res_y * scale), Raylib::Vector2.new, 0.0, Raylib::WHITE)\n  Raylib.end_drawing\nend\nRaylib.unload_render_texture(screen)\nRaylib.close_window\nSunVox.stop_engine\n"}},{"html_id":"res_x:UInt32-class-method","name":"res_x","doc":"The internal screen's resolution","summary":"<p>The internal screen's resolution</p>","abstract":false,"location":{"filename":"src/engine.cr","line_number":26,"url":null},"def":{"name":"res_x","return_type":"UInt32","visibility":"Public","body":"@@res_x"}},{"html_id":"res_y:UInt32-class-method","name":"res_y","abstract":false,"location":{"filename":"src/engine.cr","line_number":27,"url":null},"def":{"name":"res_y","return_type":"UInt32","visibility":"Public","body":"@@res_y"}}],"types":[{"html_id":"tsh-cr/Tsh/CollisionFlags","path":"Tsh/CollisionFlags.html","kind":"enum","full_name":"Tsh::CollisionFlags","name":"CollisionFlags","abstract":false,"ancestors":[{"html_id":"tsh-cr/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"tsh-cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"tsh-cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"tsh-cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/plaything.cr","line_number":44,"url":null}],"repository_name":"tsh-cr","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Player","name":"Player","value":"1"},{"id":"Pickup","name":"Pickup","value":"2"},{"id":"Obstacle","name":"Obstacle","value":"4"},{"id":"Enemy","name":"Enemy","value":"8"},{"id":"Custom1","name":"Custom1","value":"16"},{"id":"Custom2","name":"Custom2","value":"32"},{"id":"Custom3","name":"Custom3","value":"64"},{"id":"Custom4","name":"Custom4","value":"128"},{"id":"Custom5","name":"Custom5","value":"256"},{"id":"Custom6","name":"Custom6","value":"512"},{"id":"None","name":"None","value":"0"},{"id":"All","name":"All","value":"1023"}],"namespace":{"html_id":"tsh-cr/Tsh","kind":"module","full_name":"Tsh","name":"Tsh"},"doc":"Flags for setting a PlayThing's collision","summary":"<p>Flags for setting a PlayThing's collision</p>","instance_methods":[{"html_id":"custom1?-instance-method","name":"custom1?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":50,"url":null},"def":{"name":"custom1?","visibility":"Public","body":"self.includes?(Custom1)"}},{"html_id":"custom2?-instance-method","name":"custom2?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":51,"url":null},"def":{"name":"custom2?","visibility":"Public","body":"self.includes?(Custom2)"}},{"html_id":"custom3?-instance-method","name":"custom3?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":52,"url":null},"def":{"name":"custom3?","visibility":"Public","body":"self.includes?(Custom3)"}},{"html_id":"custom4?-instance-method","name":"custom4?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":53,"url":null},"def":{"name":"custom4?","visibility":"Public","body":"self.includes?(Custom4)"}},{"html_id":"custom5?-instance-method","name":"custom5?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":54,"url":null},"def":{"name":"custom5?","visibility":"Public","body":"self.includes?(Custom5)"}},{"html_id":"custom6?-instance-method","name":"custom6?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":55,"url":null},"def":{"name":"custom6?","visibility":"Public","body":"self.includes?(Custom6)"}},{"html_id":"enemy?-instance-method","name":"enemy?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":48,"url":null},"def":{"name":"enemy?","visibility":"Public","body":"self.includes?(Enemy)"}},{"html_id":"none?-instance-method","name":"none?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":44,"url":null},"def":{"name":"none?","visibility":"Public","body":"value == 0"}},{"html_id":"obstacle?-instance-method","name":"obstacle?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":47,"url":null},"def":{"name":"obstacle?","visibility":"Public","body":"self.includes?(Obstacle)"}},{"html_id":"pickup?-instance-method","name":"pickup?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":46,"url":null},"def":{"name":"pickup?","visibility":"Public","body":"self.includes?(Pickup)"}},{"html_id":"player?-instance-method","name":"player?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":45,"url":null},"def":{"name":"player?","visibility":"Public","body":"self.includes?(Player)"}}]},{"html_id":"tsh-cr/Tsh/Flipbook","path":"Tsh/Flipbook.html","kind":"struct","full_name":"Tsh::Flipbook","name":"Flipbook","abstract":false,"superclass":{"html_id":"tsh-cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"tsh-cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"tsh-cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"tsh-cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/plaything.cr","line_number":97,"url":null}],"repository_name":"tsh-cr","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tsh-cr/Tsh","kind":"module","full_name":"Tsh","name":"Tsh"},"doc":"Data for sprite animation","summary":"<p>Data for sprite animation</p>","constructors":[{"html_id":"new(start_frame:Int32,end_frame:Int32,delay:Float64)-class-method","name":"new","abstract":false,"args":[{"name":"start_frame","external_name":"start_frame","restriction":"Int32"},{"name":"end_frame","external_name":"end_frame","restriction":"Int32"},{"name":"delay","external_name":"delay","restriction":"Float64"}],"args_string":"(start_frame : Int32, end_frame : Int32, delay : Float64)","args_html":"(start_frame : Int32, end_frame : Int32, delay : Float64)","location":{"filename":"src/plaything.cr","line_number":114,"url":null},"def":{"name":"new","args":[{"name":"start_frame","external_name":"start_frame","restriction":"Int32"},{"name":"end_frame","external_name":"end_frame","restriction":"Int32"},{"name":"delay","external_name":"delay","restriction":"Float64"}],"visibility":"Public","body":"_ = allocate\n_.initialize(start_frame, end_frame, delay)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/plaything.cr","line_number":111,"url":null},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"active:Bool-instance-method","name":"active","doc":"Is the flipbook currently going? (Overwrites the PlayThing's *sprite* with *current_frame* if true)","summary":"<p>Is the flipbook currently going? (Overwrites the PlayThing's <em>sprite</em> with <em>current_frame</em> if true)</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":107,"url":null},"def":{"name":"active","return_type":"Bool","visibility":"Public","body":"@active"}},{"html_id":"current_frame:Int32-instance-method","name":"current_frame","doc":"The current frame that the flipbook is on","summary":"<p>The current frame that the flipbook is on</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":105,"url":null},"def":{"name":"current_frame","return_type":"Int32","visibility":"Public","body":"@current_frame"}},{"html_id":"delay:Float64-instance-method","name":"delay","doc":"The delay in seconds between frames","summary":"<p>The delay in seconds between frames</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":103,"url":null},"def":{"name":"delay","return_type":"Float64","visibility":"Public","body":"@delay"}},{"html_id":"delay=(delay:Float64)-instance-method","name":"delay=","doc":"The delay in seconds between frames","summary":"<p>The delay in seconds between frames</p>","abstract":false,"args":[{"name":"delay","external_name":"delay","restriction":"Float64"}],"args_string":"(delay : Float64)","args_html":"(delay : Float64)","location":{"filename":"src/plaything.cr","line_number":103,"url":null},"def":{"name":"delay=","args":[{"name":"delay","external_name":"delay","restriction":"Float64"}],"visibility":"Public","body":"@delay = delay"}},{"html_id":"end_frame:Int32-instance-method","name":"end_frame","doc":"The ending frame of the flipbook","summary":"<p>The ending frame of the flipbook</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":101,"url":null},"def":{"name":"end_frame","return_type":"Int32","visibility":"Public","body":"@end_frame"}},{"html_id":"end_frame=(end_frame:Int32)-instance-method","name":"end_frame=","doc":"The ending frame of the flipbook","summary":"<p>The ending frame of the flipbook</p>","abstract":false,"args":[{"name":"end_frame","external_name":"end_frame","restriction":"Int32"}],"args_string":"(end_frame : Int32)","args_html":"(end_frame : Int32)","location":{"filename":"src/plaything.cr","line_number":101,"url":null},"def":{"name":"end_frame=","args":[{"name":"end_frame","external_name":"end_frame","restriction":"Int32"}],"visibility":"Public","body":"@end_frame = end_frame"}},{"html_id":"reset-instance-method","name":"reset","doc":"Resets the current frame back to the beginning as well as restarting the delay","summary":"<p>Resets the current frame back to the beginning as well as restarting the delay</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":151,"url":null},"def":{"name":"reset","visibility":"Public","body":"@current_frame = start_frame\n@wait_until = Raylib.get_time + delay\n"}},{"html_id":"resume-instance-method","name":"resume","doc":"Starts the flipbook while keeping the current frame and delay difference","summary":"<p>Starts the flipbook while keeping the current frame and delay difference</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":135,"url":null},"def":{"name":"resume","visibility":"Public","body":"if !active\n  @wait_until = @wait_until + Raylib.get_time\n  @active = true\nend"}},{"html_id":"start-instance-method","name":"start","doc":"Starts the flipbook and resets the frame and delay","summary":"<p>Starts the flipbook and resets the frame and delay</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":126,"url":null},"def":{"name":"start","visibility":"Public","body":"if !@active\n  @current_frame = start_frame\n  @wait_until = Raylib.get_time + delay\n  @active = true\nend"}},{"html_id":"start_frame:Int32-instance-method","name":"start_frame","doc":"The starting frame of the flipbook","summary":"<p>The starting frame of the flipbook</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":99,"url":null},"def":{"name":"start_frame","return_type":"Int32","visibility":"Public","body":"@start_frame"}},{"html_id":"start_frame=(start_frame:Int32)-instance-method","name":"start_frame=","doc":"The starting frame of the flipbook","summary":"<p>The starting frame of the flipbook</p>","abstract":false,"args":[{"name":"start_frame","external_name":"start_frame","restriction":"Int32"}],"args_string":"(start_frame : Int32)","args_html":"(start_frame : Int32)","location":{"filename":"src/plaything.cr","line_number":99,"url":null},"def":{"name":"start_frame=","args":[{"name":"start_frame","external_name":"start_frame","restriction":"Int32"}],"visibility":"Public","body":"@start_frame = start_frame"}},{"html_id":"stop-instance-method","name":"stop","doc":"Stops the flipbook and saves the current delay","summary":"<p>Stops the flipbook and saves the current delay</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":143,"url":null},"def":{"name":"stop","visibility":"Public","body":"if @active\n  @wait_until = @wait_until - Raylib.get_time\n  @active = false\nend"}}]},{"html_id":"tsh-cr/Tsh/Key","path":"Tsh/Key.html","kind":"alias","full_name":"Tsh::Key","name":"Key","abstract":false,"locations":[{"filename":"src/engine.cr","line_number":32,"url":null}],"repository_name":"tsh-cr","program":false,"enum":false,"alias":true,"aliased":"Raylib::KeyboardKey","aliased_html":"Raylib::KeyboardKey","const":false,"namespace":{"html_id":"tsh-cr/Tsh","kind":"module","full_name":"Tsh","name":"Tsh"}},{"html_id":"tsh-cr/Tsh/Note","path":"Tsh/Note.html","kind":"alias","full_name":"Tsh::Note","name":"Note","abstract":false,"locations":[{"filename":"src/sounds.cr","line_number":26,"url":null}],"repository_name":"tsh-cr","program":false,"enum":false,"alias":true,"aliased":"SunVox::Note","aliased_html":"SunVox::Note","const":false,"namespace":{"html_id":"tsh-cr/Tsh","kind":"module","full_name":"Tsh","name":"Tsh"}},{"html_id":"tsh-cr/Tsh/PlayThing","path":"Tsh/PlayThing.html","kind":"class","full_name":"Tsh::PlayThing","name":"PlayThing","abstract":false,"superclass":{"html_id":"tsh-cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"tsh-cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"tsh-cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/plaything.cr","line_number":158,"url":null}],"repository_name":"tsh-cr","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tsh-cr/Tsh","kind":"module","full_name":"Tsh","name":"Tsh"},"doc":"The generic class for anything in the engine","summary":"<p>The generic class for anything in the engine</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/plaything.cr","line_number":212,"url":null},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(*,x:Int=0,y:Int=0,collision_flags:CollisionFlags=CollisionFlags::None,on_collide:Proc(PlayThing,PlayThing,Nil)=->(pt:PlayThing,other:PlayThing)do\nend,on_collide_start:Proc(PlayThing,PlayThing,Nil)=->(pt:PlayThing,other:PlayThing)do\nend,on_collide_end:Proc(PlayThing,PlayThing,Nil)=->(pt:PlayThing,other:PlayThing)do\nend,sprites:Array(Sprite)=[]ofSprite,flags:Flags=Flags::None)-class-method","name":"new","doc":"Creates the PlayThing and sets *sprite* to 0 if any sprites were given","summary":"<p>Creates the PlayThing and sets <em>sprite</em> to 0 if any sprites were given</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"x","default_value":"0","external_name":"x","restriction":"Int"},{"name":"y","default_value":"0","external_name":"y","restriction":"Int"},{"name":"collision_flags","default_value":"CollisionFlags::None","external_name":"collision_flags","restriction":"CollisionFlags"},{"name":"on_collide","default_value":"->(pt : PlayThing, other : PlayThing) do\nend","external_name":"on_collide","restriction":"Proc(PlayThing, PlayThing, Nil)"},{"name":"on_collide_start","default_value":"->(pt : PlayThing, other : PlayThing) do\nend","external_name":"on_collide_start","restriction":"Proc(PlayThing, PlayThing, Nil)"},{"name":"on_collide_end","default_value":"->(pt : PlayThing, other : PlayThing) do\nend","external_name":"on_collide_end","restriction":"Proc(PlayThing, PlayThing, Nil)"},{"name":"sprites","default_value":"[] of Sprite","external_name":"sprites","restriction":"Array(Sprite)"},{"name":"flags","default_value":"Flags::None","external_name":"flags","restriction":"Flags"}],"args_string":"(*, x : Int = 0, y : Int = 0, collision_flags : CollisionFlags = CollisionFlags::None, on_collide : Proc(PlayThing, PlayThing, Nil) = ->(pt : PlayThing, other : PlayThing) do\nend, on_collide_start : Proc(PlayThing, PlayThing, Nil) = ->(pt : PlayThing, other : PlayThing) do\nend, on_collide_end : Proc(PlayThing, PlayThing, Nil) = ->(pt : PlayThing, other : PlayThing) do\nend, sprites : Array(Sprite) = [] of Sprite, flags : Flags = Flags::None)","args_html":"(*, x : Int = <span class=\"n\">0</span>, y : Int = <span class=\"n\">0</span>, collision_flags : <a href=\"../Tsh/CollisionFlags.html\">CollisionFlags</a> = <span class=\"t\">CollisionFlags</span><span class=\"t\">::</span><span class=\"t\">None</span>, on_collide : Proc(<a href=\"../Tsh/PlayThing.html\">PlayThing</a>, <a href=\"../Tsh/PlayThing.html\">PlayThing</a>, Nil) = <span class=\"o\">-&gt;</span>(pt : <span class=\"t\">PlayThing</span>, other : <span class=\"t\">PlayThing</span>) <span class=\"k\">do</span>\n<span class=\"k\">end</span>, on_collide_start : Proc(<a href=\"../Tsh/PlayThing.html\">PlayThing</a>, <a href=\"../Tsh/PlayThing.html\">PlayThing</a>, Nil) = <span class=\"o\">-&gt;</span>(pt : <span class=\"t\">PlayThing</span>, other : <span class=\"t\">PlayThing</span>) <span class=\"k\">do</span>\n<span class=\"k\">end</span>, on_collide_end : Proc(<a href=\"../Tsh/PlayThing.html\">PlayThing</a>, <a href=\"../Tsh/PlayThing.html\">PlayThing</a>, Nil) = <span class=\"o\">-&gt;</span>(pt : <span class=\"t\">PlayThing</span>, other : <span class=\"t\">PlayThing</span>) <span class=\"k\">do</span>\n<span class=\"k\">end</span>, sprites : Array(<a href=\"../Tsh/Sprite.html\">Sprite</a>) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Sprite</span>, flags : <a href=\"../Tsh/PlayThing/Flags.html\">Flags</a> = <span class=\"t\">Flags</span><span class=\"t\">::</span><span class=\"t\">None</span>)","location":{"filename":"src/plaything.cr","line_number":217,"url":null},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"x","default_value":"0","external_name":"x","restriction":"Int"},{"name":"y","default_value":"0","external_name":"y","restriction":"Int"},{"name":"collision_flags","default_value":"CollisionFlags::None","external_name":"collision_flags","restriction":"CollisionFlags"},{"name":"on_collide","default_value":"->(pt : PlayThing, other : PlayThing) do\nend","external_name":"on_collide","restriction":"Proc(PlayThing, PlayThing, Nil)"},{"name":"on_collide_start","default_value":"->(pt : PlayThing, other : PlayThing) do\nend","external_name":"on_collide_start","restriction":"Proc(PlayThing, PlayThing, Nil)"},{"name":"on_collide_end","default_value":"->(pt : PlayThing, other : PlayThing) do\nend","external_name":"on_collide_end","restriction":"Proc(PlayThing, PlayThing, Nil)"},{"name":"sprites","default_value":"[] of Sprite","external_name":"sprites","restriction":"Array(Sprite)"},{"name":"flags","default_value":"Flags::None","external_name":"flags","restriction":"Flags"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(x: x, y: y, collision_flags: collision_flags, on_collide: on_collide, on_collide_start: on_collide_start, on_collide_end: on_collide_end, sprites: sprites, flags: flags)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"angle:Float32-instance-method","name":"angle","doc":"The PlayThing's angle in degrees.\n0 points up.\nAll ways to set will keep the value between 0 and 360","summary":"<p>The PlayThing's angle in degrees.</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":188,"url":null},"def":{"name":"angle","return_type":"Float32","visibility":"Public","body":"@angle"}},{"html_id":"angle=(angle:Float32)-instance-method","name":"angle=","doc":"Sets the angle and removes all 360's from the number to ensure it is between 0 and 359","summary":"<p>Sets the angle and removes all 360's from the number to ensure it is between 0 and 359</p>","abstract":false,"args":[{"name":"angle","external_name":"angle","restriction":"Float32"}],"args_string":"(angle : Float32)","args_html":"(angle : Float32)","location":{"filename":"src/plaything.cr","line_number":251,"url":null},"def":{"name":"angle=","args":[{"name":"angle","external_name":"angle","restriction":"Float32"}],"visibility":"Public","body":"@angle = angle < 0 ? (360 - (angle.abs - ((angle.abs // 360) * 360))) : angle - ((angle // 360) * 360)"}},{"html_id":"collision_flags:CollisionFlags-instance-method","name":"collision_flags","doc":"The flags to use for collision detection","summary":"<p>The flags to use for collision detection</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":198,"url":null},"def":{"name":"collision_flags","return_type":"CollisionFlags","visibility":"Public","body":"@collision_flags"}},{"html_id":"collision_flags=(collision_flags:CollisionFlags)-instance-method","name":"collision_flags=","doc":"The flags to use for collision detection","summary":"<p>The flags to use for collision detection</p>","abstract":false,"args":[{"name":"collision_flags","external_name":"collision_flags","restriction":"CollisionFlags"}],"args_string":"(collision_flags : CollisionFlags)","args_html":"(collision_flags : <a href=\"../Tsh/CollisionFlags.html\">CollisionFlags</a>)","location":{"filename":"src/plaything.cr","line_number":198,"url":null},"def":{"name":"collision_flags=","args":[{"name":"collision_flags","external_name":"collision_flags","restriction":"CollisionFlags"}],"visibility":"Public","body":"@collision_flags = collision_flags"}},{"html_id":"destroy-instance-method","name":"destroy","doc":"Destroys a plaything (No more displaying or collision calls)","summary":"<p>Destroys a plaything (No more displaying or collision calls)</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":285,"url":null},"def":{"name":"destroy","visibility":"Public","body":"if Tsh.playthings_to_destroy.includes?(self)\nelse\n  Tsh.playthings_to_destroy << self\nend"}},{"html_id":"flags:Flags-instance-method","name":"flags","doc":"The flags for the plaything","summary":"<p>The flags for the plaything</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":173,"url":null},"def":{"name":"flags","return_type":"Flags","visibility":"Public","body":"@flags"}},{"html_id":"flags=(flags:Flags)-instance-method","name":"flags=","doc":"The flags for the plaything","summary":"<p>The flags for the plaything</p>","abstract":false,"args":[{"name":"flags","external_name":"flags","restriction":"Flags"}],"args_string":"(flags : Flags)","args_html":"(flags : <a href=\"../Tsh/PlayThing/Flags.html\">Flags</a>)","location":{"filename":"src/plaything.cr","line_number":173,"url":null},"def":{"name":"flags=","args":[{"name":"flags","external_name":"flags","restriction":"Flags"}],"visibility":"Public","body":"@flags = flags"}},{"html_id":"flipbook:Flipbook-instance-method","name":"flipbook","doc":"The flipbook to animate the sprites. Will always overwrite *sprite* if active","summary":"<p>The flipbook to animate the sprites.</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":195,"url":null},"def":{"name":"flipbook","return_type":"Flipbook","visibility":"Public","body":"@flipbook"}},{"html_id":"flipbook=(flipbook:Flipbook)-instance-method","name":"flipbook=","doc":"The flipbook to animate the sprites. Will always overwrite *sprite* if active","summary":"<p>The flipbook to animate the sprites.</p>","abstract":false,"args":[{"name":"flipbook","external_name":"flipbook","restriction":"Flipbook"}],"args_string":"(flipbook : Flipbook)","args_html":"(flipbook : <a href=\"../Tsh/Flipbook.html\">Flipbook</a>)","location":{"filename":"src/plaything.cr","line_number":195,"url":null},"def":{"name":"flipbook=","args":[{"name":"flipbook","external_name":"flipbook","restriction":"Flipbook"}],"visibility":"Public","body":"@flipbook = flipbook"}},{"html_id":"move(x:Int,y:Int)-instance-method","name":"move","doc":"Moves in x, y direction. X and Y are speeds.\nClamps between 0 and screen width/height","summary":"<p>Moves in x, y direction.</p>","abstract":false,"args":[{"name":"x","external_name":"x","restriction":"Int"},{"name":"y","external_name":"y","restriction":"Int"}],"args_string":"(x : Int, y : Int)","args_html":"(x : Int, y : Int)","location":{"filename":"src/plaything.cr","line_number":262,"url":null},"def":{"name":"move","args":[{"name":"x","external_name":"x","restriction":"Int"},{"name":"y","external_name":"y","restriction":"Int"}],"visibility":"Public","body":"width = @sprite >= 0 ? @sprites[@sprite].width : 0\nheight = @sprite >= 0 ? @sprites[@sprite].height : 0\nx = (x * Raylib.get_frame_time)\ny = (y * Raylib.get_frame_time)\n@last_x = @x\n@last_y = @y\n@x = (@x.to_f32 + x) < 0 ? 0_u32 : (((@x.to_f32 + x) + width) > Tsh.res_x ? Tsh.res_x - width : @x + x.round.to_i32)\n@y = (@y.to_f32 + y) < 0 ? 0_u32 : (((@y.to_f32 + y) + height) > Tsh.res_y ? Tsh.res_y - height : @y + y.round.to_i32)\n"}},{"html_id":"on_collide:Proc(PlayThing,PlayThing,Nil)-instance-method","name":"on_collide","doc":"Called when an overlap between this plaything (pt) and another plaything (other) occurs","summary":"<p>Called when an overlap between this plaything (pt) and another plaything (other) occurs</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":200,"url":null},"def":{"name":"on_collide","return_type":"Proc(PlayThing, PlayThing, Nil)","visibility":"Public","body":"@on_collide"}},{"html_id":"on_collide=(on_collide:Proc(PlayThing,PlayThing,Nil))-instance-method","name":"on_collide=","doc":"Called when an overlap between this plaything (pt) and another plaything (other) occurs","summary":"<p>Called when an overlap between this plaything (pt) and another plaything (other) occurs</p>","abstract":false,"args":[{"name":"on_collide","external_name":"on_collide","restriction":"Proc(PlayThing, PlayThing, Nil)"}],"args_string":"(on_collide : Proc(PlayThing, PlayThing, Nil))","args_html":"(on_collide : Proc(<a href=\"../Tsh/PlayThing.html\">PlayThing</a>, <a href=\"../Tsh/PlayThing.html\">PlayThing</a>, Nil))","location":{"filename":"src/plaything.cr","line_number":200,"url":null},"def":{"name":"on_collide=","args":[{"name":"on_collide","external_name":"on_collide","restriction":"Proc(PlayThing, PlayThing, Nil)"}],"visibility":"Public","body":"@on_collide = on_collide"}},{"html_id":"on_collide_end:Proc(PlayThing,PlayThing,Nil)-instance-method","name":"on_collide_end","doc":"Called once when an overlap stops","summary":"<p>Called once when an overlap stops</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":204,"url":null},"def":{"name":"on_collide_end","return_type":"Proc(PlayThing, PlayThing, Nil)","visibility":"Public","body":"@on_collide_end"}},{"html_id":"on_collide_end=(on_collide_end:Proc(PlayThing,PlayThing,Nil))-instance-method","name":"on_collide_end=","doc":"Called once when an overlap stops","summary":"<p>Called once when an overlap stops</p>","abstract":false,"args":[{"name":"on_collide_end","external_name":"on_collide_end","restriction":"Proc(PlayThing, PlayThing, Nil)"}],"args_string":"(on_collide_end : Proc(PlayThing, PlayThing, Nil))","args_html":"(on_collide_end : Proc(<a href=\"../Tsh/PlayThing.html\">PlayThing</a>, <a href=\"../Tsh/PlayThing.html\">PlayThing</a>, Nil))","location":{"filename":"src/plaything.cr","line_number":204,"url":null},"def":{"name":"on_collide_end=","args":[{"name":"on_collide_end","external_name":"on_collide_end","restriction":"Proc(PlayThing, PlayThing, Nil)"}],"visibility":"Public","body":"@on_collide_end = on_collide_end"}},{"html_id":"on_collide_start:Proc(PlayThing,PlayThing,Nil)-instance-method","name":"on_collide_start","doc":"Called once when an overlap starts","summary":"<p>Called once when an overlap starts</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":202,"url":null},"def":{"name":"on_collide_start","return_type":"Proc(PlayThing, PlayThing, Nil)","visibility":"Public","body":"@on_collide_start"}},{"html_id":"on_collide_start=(on_collide_start:Proc(PlayThing,PlayThing,Nil))-instance-method","name":"on_collide_start=","doc":"Called once when an overlap starts","summary":"<p>Called once when an overlap starts</p>","abstract":false,"args":[{"name":"on_collide_start","external_name":"on_collide_start","restriction":"Proc(PlayThing, PlayThing, Nil)"}],"args_string":"(on_collide_start : Proc(PlayThing, PlayThing, Nil))","args_html":"(on_collide_start : Proc(<a href=\"../Tsh/PlayThing.html\">PlayThing</a>, <a href=\"../Tsh/PlayThing.html\">PlayThing</a>, Nil))","location":{"filename":"src/plaything.cr","line_number":202,"url":null},"def":{"name":"on_collide_start=","args":[{"name":"on_collide_start","external_name":"on_collide_start","restriction":"Proc(PlayThing, PlayThing, Nil)"}],"visibility":"Public","body":"@on_collide_start = on_collide_start"}},{"html_id":"right_vector:Raylib::Vector2-instance-method","name":"right_vector","doc":"The right direction of the PlayThing.\nA PlayThing with 0 angle will have right_vector {1, 0}","summary":"<p>The right direction of the PlayThing.</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":297,"url":null},"def":{"name":"right_vector","return_type":"Raylib::Vector2","visibility":"Public","body":"return Raylib::Vector2.new(x: Math.cos(@angle * Raylib::DEG2RAD), y: Math.sin(@angle * Raylib::DEG2RAD))"}},{"html_id":"rotate(rot:Float32)-instance-method","name":"rotate","doc":"Rotates in *rot* direction, going clockwise","summary":"<p>Rotates in <em>rot</em> direction, going clockwise</p>","abstract":false,"args":[{"name":"rot","external_name":"rot","restriction":"Float32"}],"args_string":"(rot : Float32)","args_html":"(rot : Float32)","location":{"filename":"src/plaything.cr","line_number":280,"url":null},"def":{"name":"rotate","args":[{"name":"rot","external_name":"rot","restriction":"Float32"}],"visibility":"Public","body":"self.angle = @angle + (rot * Raylib.get_frame_time)"}},{"html_id":"sprite:Int32-instance-method","name":"sprite","doc":"The sprite to display from *sprites*","summary":"<p>The sprite to display from <em>sprites</em></p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":191,"url":null},"def":{"name":"sprite","return_type":"Int32","visibility":"Public","body":"@sprite"}},{"html_id":"sprite=(sprite:Int32)-instance-method","name":"sprite=","doc":"Sets the current sprite number in *sprites* to display","summary":"<p>Sets the current sprite number in <em>sprites</em> to display</p>","abstract":false,"args":[{"name":"sprite","external_name":"sprite","restriction":"Int32"}],"args_string":"(sprite : Int32)","args_html":"(sprite : Int32)","location":{"filename":"src/plaything.cr","line_number":256,"url":null},"def":{"name":"sprite=","args":[{"name":"sprite","external_name":"sprite","restriction":"Int32"}],"visibility":"Public","body":"@sprite = sprite < 0 ? 0 : (sprite >= sprites.size ? sprites.size - 1 : sprite)"}},{"html_id":"sprites:Array(Sprite)-instance-method","name":"sprites","doc":"An array of all sprites for the PlayThing to display","summary":"<p>An array of all sprites for the PlayThing to display</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":193,"url":null},"def":{"name":"sprites","return_type":"Array(Sprite)","visibility":"Public","body":"@sprites"}},{"html_id":"unmove-instance-method","name":"unmove","doc":"Sets the position to the previous x and y values","summary":"<p>Sets the position to the previous x and y values</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":274,"url":null},"def":{"name":"unmove","visibility":"Public","body":"@x = @last_x\n@y = @last_y\n"}},{"html_id":"up_vector:Raylib::Vector2-instance-method","name":"up_vector","doc":"The upwards direction of the PlayThing.\nA PlayThing with 0 angle will have up_vector {0, 1}","summary":"<p>The upwards direction of the PlayThing.</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":291,"url":null},"def":{"name":"up_vector","return_type":"Raylib::Vector2","visibility":"Public","body":"return Raylib::Vector2.new(x: Math.cos((@angle - 90) * Raylib::DEG2RAD), y: Math.sin((@angle + 90) * Raylib::DEG2RAD))"}},{"html_id":"x:UInt32-instance-method","name":"x","doc":"The PlayThing's location. Bottom left centered.\nAll ways to set clamp between 0 and Tsh.res_x/Tsh.res_y","summary":"<p>The PlayThing's location.</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":177,"url":null},"def":{"name":"x","return_type":"UInt32","visibility":"Public","body":"@x"}},{"html_id":"x=(x:Int)-instance-method","name":"x=","doc":"Sets the x position and clamps it between 0 and the screen's width","summary":"<p>Sets the x position and clamps it between 0 and the screen's width</p>","abstract":false,"args":[{"name":"x","external_name":"x","restriction":"Int"}],"args_string":"(x : Int)","args_html":"(x : Int)","location":{"filename":"src/plaything.cr","line_number":239,"url":null},"def":{"name":"x=","args":[{"name":"x","external_name":"x","restriction":"Int"}],"visibility":"Public","body":"@last_x = @x\n@x = x < 0 ? 0_u32 : (x > Tsh.res_x ? Tsh.res_x : x.to_u32)\n"}},{"html_id":"y:UInt32-instance-method","name":"y","abstract":false,"location":{"filename":"src/plaything.cr","line_number":178,"url":null},"def":{"name":"y","return_type":"UInt32","visibility":"Public","body":"@y"}},{"html_id":"y=(y:Int)-instance-method","name":"y=","doc":"Sets the y position and clamps it between 0 and the screen's height","summary":"<p>Sets the y position and clamps it between 0 and the screen's height</p>","abstract":false,"args":[{"name":"y","external_name":"y","restriction":"Int"}],"args_string":"(y : Int)","args_html":"(y : Int)","location":{"filename":"src/plaything.cr","line_number":245,"url":null},"def":{"name":"y=","args":[{"name":"y","external_name":"y","restriction":"Int"}],"visibility":"Public","body":"@last_y = @y\n@y = y < 0 ? 0_u32 : (y > Tsh.res_y ? Tsh.res_y : y.to_u32)\n"}}],"types":[{"html_id":"tsh-cr/Tsh/PlayThing/Flags","path":"Tsh/PlayThing/Flags.html","kind":"enum","full_name":"Tsh::PlayThing::Flags","name":"Flags","abstract":false,"ancestors":[{"html_id":"tsh-cr/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"tsh-cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"tsh-cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"tsh-cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/plaything.cr","line_number":161,"url":null}],"repository_name":"tsh-cr","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Invisible","name":"Invisible","value":"1"},{"id":"Custom1","name":"Custom1","value":"2"},{"id":"Custom2","name":"Custom2","value":"4"},{"id":"Custom3","name":"Custom3","value":"8"},{"id":"Custom4","name":"Custom4","value":"16"},{"id":"Custom5","name":"Custom5","value":"32"},{"id":"Custom6","name":"Custom6","value":"64"},{"id":"None","name":"None","value":"0"},{"id":"All","name":"All","value":"127"}],"namespace":{"html_id":"tsh-cr/Tsh/PlayThing","kind":"class","full_name":"Tsh::PlayThing","name":"PlayThing"},"doc":"Flags for more miscellaneous functions","summary":"<p>Flags for more miscellaneous functions</p>","instance_methods":[{"html_id":"custom1?-instance-method","name":"custom1?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":164,"url":null},"def":{"name":"custom1?","visibility":"Public","body":"self.includes?(Custom1)"}},{"html_id":"custom2?-instance-method","name":"custom2?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":165,"url":null},"def":{"name":"custom2?","visibility":"Public","body":"self.includes?(Custom2)"}},{"html_id":"custom3?-instance-method","name":"custom3?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":166,"url":null},"def":{"name":"custom3?","visibility":"Public","body":"self.includes?(Custom3)"}},{"html_id":"custom4?-instance-method","name":"custom4?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":167,"url":null},"def":{"name":"custom4?","visibility":"Public","body":"self.includes?(Custom4)"}},{"html_id":"custom5?-instance-method","name":"custom5?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":168,"url":null},"def":{"name":"custom5?","visibility":"Public","body":"self.includes?(Custom5)"}},{"html_id":"custom6?-instance-method","name":"custom6?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":169,"url":null},"def":{"name":"custom6?","visibility":"Public","body":"self.includes?(Custom6)"}},{"html_id":"invisible?-instance-method","name":"invisible?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":162,"url":null},"def":{"name":"invisible?","visibility":"Public","body":"self.includes?(Invisible)"}},{"html_id":"none?-instance-method","name":"none?","abstract":false,"location":{"filename":"src/plaything.cr","line_number":161,"url":null},"def":{"name":"none?","visibility":"Public","body":"value == 0"}}]}]},{"html_id":"tsh-cr/Tsh/PT","path":"Tsh/PT.html","kind":"alias","full_name":"Tsh::PT","name":"PT","abstract":false,"locations":[{"filename":"src/plaything.cr","line_number":24,"url":null}],"repository_name":"tsh-cr","program":false,"enum":false,"alias":true,"aliased":"Tsh::PlayThing","aliased_html":"<a href=\"../Tsh/PlayThing.html\">Tsh::PlayThing</a>","const":false,"namespace":{"html_id":"tsh-cr/Tsh","kind":"module","full_name":"Tsh","name":"Tsh"},"doc":"A shorthand for PlayThing","summary":"<p>A shorthand for PlayThing</p>"},{"html_id":"tsh-cr/Tsh/Sound","path":"Tsh/Sound.html","kind":"class","full_name":"Tsh::Sound","name":"Sound","abstract":false,"superclass":{"html_id":"tsh-cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"tsh-cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"tsh-cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sounds.cr","line_number":58,"url":null}],"repository_name":"tsh-cr","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tsh-cr/Tsh","kind":"module","full_name":"Tsh","name":"Tsh"},"doc":"A collection of note data which can be played.\nCurrently you can play a Tone on every waveform at once,\ngiving the ability to play 8 different sounding musical notes\nat the same time.\nAttemps to play multiple tones on the same waveform at\nthe same time or playing over 8 tones in one note will\nyield unexpected and possibly disastrous results.","summary":"<p>A collection of note data which can be played.</p>","constructors":[{"html_id":"new(notes:Array(Note),looping:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"notes","external_name":"notes","restriction":"Array(Note)"},{"name":"looping","default_value":"false","external_name":"looping","restriction":"Bool"}],"args_string":"(notes : Array(Note), looping : Bool = false)","args_html":"(notes : Array(<a href=\"../Tsh/Sound/Note.html\">Note</a>), looping : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/sounds.cr","line_number":103,"url":null},"def":{"name":"new","args":[{"name":"notes","external_name":"notes","restriction":"Array(Note)"},{"name":"looping","default_value":"false","external_name":"looping","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(notes, looping)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"looping:Bool-instance-method","name":"looping","doc":"Loop the sound","summary":"<p>Loop the sound</p>","abstract":false,"location":{"filename":"src/sounds.cr","line_number":98,"url":null},"def":{"name":"looping","return_type":"Bool","visibility":"Public","body":"@looping"}},{"html_id":"looping=(looping:Bool)-instance-method","name":"looping=","doc":"Loop the sound","summary":"<p>Loop the sound</p>","abstract":false,"args":[{"name":"looping","external_name":"looping","restriction":"Bool"}],"args_string":"(looping : Bool)","args_html":"(looping : Bool)","location":{"filename":"src/sounds.cr","line_number":98,"url":null},"def":{"name":"looping=","args":[{"name":"looping","external_name":"looping","restriction":"Bool"}],"visibility":"Public","body":"@looping = looping"}},{"html_id":"notes:Array(Note)-instance-method","name":"notes","doc":"The notes for the sound to play","summary":"<p>The notes for the sound to play</p>","abstract":false,"location":{"filename":"src/sounds.cr","line_number":94,"url":null},"def":{"name":"notes","return_type":"Array(Note)","visibility":"Public","body":"@notes"}},{"html_id":"play-instance-method","name":"play","doc":"Play the sound from the beginning","summary":"<p>Play the sound from the beginning</p>","abstract":false,"location":{"filename":"src/sounds.cr","line_number":112,"url":null},"def":{"name":"play","visibility":"Public","body":"if notes.size > 0 && !(Tsh.playing_sounds.includes?(self))\n  Tsh.open_tracks.each.with_index do |is_open, track|\n    if is_open\n      @track = track\n      Tsh.open_tracks[track] = false\n      break\n    end\n  end\n  if @track == -1\n    @track = Tsh.playing_sounds[0].track\n    Tsh.playing_sounds[0].stop\n    Tsh.open_tracks[@track] = false\n  end\n  Tsh.playing_sounds << self\n  @current_note = 0\n  ticks = SunVox.ticks\n  tps = SunVox.ticks_per_second\n  notes[@current_note].tones.each.with_index do |tone, i|\n    SunVox.send_event(Tsh.slot, i + (@track * Tsh.generators.size), tone.note, 0, Tsh.generators[tone.waveform.value])\n  end\n  @wait_time = Raylib.get_time + notes[@current_note].length\n  @playing = true\nend"}},{"html_id":"playing:Bool-instance-method","name":"playing","doc":"Is the sound currently playing?","summary":"<p>Is the sound currently playing?</p>","abstract":false,"location":{"filename":"src/sounds.cr","line_number":96,"url":null},"def":{"name":"playing","return_type":"Bool","visibility":"Public","body":"@playing"}},{"html_id":"resume-instance-method","name":"resume","doc":"Resume the sound from where it was stopped","summary":"<p>Resume the sound from where it was stopped</p>","abstract":false,"location":{"filename":"src/sounds.cr","line_number":150,"url":null},"def":{"name":"resume","visibility":"Public","body":"if notes.size > 0 && !(Tsh.playing_sounds.includes?(self))\n  Tsh.open_tracks.each.with_index do |is_open, track|\n    if is_open\n      @track = track\n      Tsh.open_tracks[track] = false\n      break\n    end\n  end\n  if @track == -1\n    @track = Tsh.playing_sounds[0].track\n    Tsh.playing_sounds[0].stop\n    Tsh.open_tracks[@track] = false\n  end\n  Tsh.playing_sounds << self\n  notes[@current_note].tones.each.with_index do |tone, i|\n    SunVox.send_event(Tsh.slot, i + (@track * Tsh.generators.size), tone.note, 0, Tsh.generators[tone.waveform.value])\n  end\n  @wait_time = @wait_time + Raylib.get_time\n  @playing = true\nend"}},{"html_id":"stop-instance-method","name":"stop","doc":"Stop the sound","summary":"<p>Stop the sound</p>","abstract":false,"location":{"filename":"src/sounds.cr","line_number":141,"url":null},"def":{"name":"stop","visibility":"Public","body":"Tsh.open_tracks[@track] = true\nTsh.playing_sounds.delete(self)\n@track = -1\n@wait_time = @wait_time - Raylib.get_time\n@playing = false\n"}}],"types":[{"html_id":"tsh-cr/Tsh/Sound/Note","path":"Tsh/Sound/Note.html","kind":"struct","full_name":"Tsh::Sound::Note","name":"Note","abstract":false,"superclass":{"html_id":"tsh-cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"tsh-cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"tsh-cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"tsh-cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sounds.cr","line_number":83,"url":null}],"repository_name":"tsh-cr","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tsh-cr/Tsh/Sound","kind":"class","full_name":"Tsh::Sound","name":"Sound"},"doc":"A collection of tones with a length to play them for","summary":"<p>A collection of tones with a length to play them for</p>","constructors":[{"html_id":"new(tones:Array(Tone),length:Float64)-class-method","name":"new","abstract":false,"args":[{"name":"tones","external_name":"tones","restriction":"Array(Tone)"},{"name":"length","external_name":"length","restriction":"Float64"}],"args_string":"(tones : Array(Tone), length : Float64)","args_html":"(tones : Array(<a href=\"../../Tsh/Sound/Tone.html\">Tone</a>), length : Float64)","location":{"filename":"src/sounds.cr","line_number":89,"url":null},"def":{"name":"new","args":[{"name":"tones","external_name":"tones","restriction":"Array(Tone)"},{"name":"length","external_name":"length","restriction":"Float64"}],"visibility":"Public","body":"_ = allocate\n_.initialize(tones, length)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"length:Float64-instance-method","name":"length","doc":"How long to play them for","summary":"<p>How long to play them for</p>","abstract":false,"location":{"filename":"src/sounds.cr","line_number":87,"url":null},"def":{"name":"length","return_type":"Float64","visibility":"Public","body":"@length"}},{"html_id":"length=(length:Float64)-instance-method","name":"length=","doc":"How long to play them for","summary":"<p>How long to play them for</p>","abstract":false,"args":[{"name":"length","external_name":"length","restriction":"Float64"}],"args_string":"(length : Float64)","args_html":"(length : Float64)","location":{"filename":"src/sounds.cr","line_number":87,"url":null},"def":{"name":"length=","args":[{"name":"length","external_name":"length","restriction":"Float64"}],"visibility":"Public","body":"@length = length"}},{"html_id":"tones:Array(Tone)-instance-method","name":"tones","doc":"The tones to play","summary":"<p>The tones to play</p>","abstract":false,"location":{"filename":"src/sounds.cr","line_number":85,"url":null},"def":{"name":"tones","return_type":"Array(Tone)","visibility":"Public","body":"@tones"}},{"html_id":"tones=(tones:Array(Tone))-instance-method","name":"tones=","doc":"The tones to play","summary":"<p>The tones to play</p>","abstract":false,"args":[{"name":"tones","external_name":"tones","restriction":"Array(Tone)"}],"args_string":"(tones : Array(Tone))","args_html":"(tones : Array(<a href=\"../../Tsh/Sound/Tone.html\">Tone</a>))","location":{"filename":"src/sounds.cr","line_number":85,"url":null},"def":{"name":"tones=","args":[{"name":"tones","external_name":"tones","restriction":"Array(Tone)"}],"visibility":"Public","body":"@tones = tones"}}]},{"html_id":"tsh-cr/Tsh/Sound/Tone","path":"Tsh/Sound/Tone.html","kind":"struct","full_name":"Tsh::Sound::Tone","name":"Tone","abstract":false,"superclass":{"html_id":"tsh-cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"tsh-cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"tsh-cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"tsh-cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sounds.cr","line_number":60,"url":null}],"repository_name":"tsh-cr","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tsh-cr/Tsh/Sound","kind":"class","full_name":"Tsh::Sound","name":"Sound"},"doc":"A musical note and the waveform to play it on","summary":"<p>A musical note and the waveform to play it on</p>","constructors":[{"html_id":"new(note:Tsh::Note,waveform:Waveform)-class-method","name":"new","abstract":false,"args":[{"name":"note","external_name":"note","restriction":"Tsh::Note"},{"name":"waveform","external_name":"waveform","restriction":"Waveform"}],"args_string":"(note : Tsh::Note, waveform : Waveform)","args_html":"(note : <a href=\"../../Tsh/Note.html\">Tsh::Note</a>, waveform : <a href=\"../../Tsh/Sound/Tone/Waveform.html\">Waveform</a>)","location":{"filename":"src/sounds.cr","line_number":78,"url":null},"def":{"name":"new","args":[{"name":"note","external_name":"note","restriction":"Tsh::Note"},{"name":"waveform","external_name":"waveform","restriction":"Waveform"}],"visibility":"Public","body":"_ = allocate\n_.initialize(note, waveform)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"note:Tsh::Note-instance-method","name":"note","doc":"The musical note to play","summary":"<p>The musical note to play</p>","abstract":false,"location":{"filename":"src/sounds.cr","line_number":74,"url":null},"def":{"name":"note","return_type":"Tsh::Note","visibility":"Public","body":"@note"}},{"html_id":"note=(note:Tsh::Note)-instance-method","name":"note=","doc":"The musical note to play","summary":"<p>The musical note to play</p>","abstract":false,"args":[{"name":"note","external_name":"note","restriction":"Tsh::Note"}],"args_string":"(note : Tsh::Note)","args_html":"(note : <a href=\"../../Tsh/Note.html\">Tsh::Note</a>)","location":{"filename":"src/sounds.cr","line_number":74,"url":null},"def":{"name":"note=","args":[{"name":"note","external_name":"note","restriction":"Tsh::Note"}],"visibility":"Public","body":"@note = note"}},{"html_id":"waveform:Waveform-instance-method","name":"waveform","doc":"The waveform to play it on","summary":"<p>The waveform to play it on</p>","abstract":false,"location":{"filename":"src/sounds.cr","line_number":76,"url":null},"def":{"name":"waveform","return_type":"Waveform","visibility":"Public","body":"@waveform"}},{"html_id":"waveform=(waveform:Waveform)-instance-method","name":"waveform=","doc":"The waveform to play it on","summary":"<p>The waveform to play it on</p>","abstract":false,"args":[{"name":"waveform","external_name":"waveform","restriction":"Waveform"}],"args_string":"(waveform : Waveform)","args_html":"(waveform : <a href=\"../../Tsh/Sound/Tone/Waveform.html\">Waveform</a>)","location":{"filename":"src/sounds.cr","line_number":76,"url":null},"def":{"name":"waveform=","args":[{"name":"waveform","external_name":"waveform","restriction":"Waveform"}],"visibility":"Public","body":"@waveform = waveform"}}],"types":[{"html_id":"tsh-cr/Tsh/Sound/Tone/Waveform","path":"Tsh/Sound/Tone/Waveform.html","kind":"enum","full_name":"Tsh::Sound::Tone::Waveform","name":"Waveform","abstract":false,"ancestors":[{"html_id":"tsh-cr/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"tsh-cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"tsh-cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"tsh-cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/sounds.cr","line_number":62,"url":null}],"repository_name":"tsh-cr","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Triangle","name":"Triangle","value":"0"},{"id":"Saw","name":"Saw","value":"1"},{"id":"Square","name":"Square","value":"2"},{"id":"Noise","name":"Noise","value":"3"},{"id":"Sin","name":"Sin","value":"4"},{"id":"HSin","name":"HSin","value":"5"},{"id":"ASin","name":"ASin","value":"6"},{"id":"PSin","name":"PSin","value":"7"}],"namespace":{"html_id":"tsh-cr/Tsh/Sound/Tone","kind":"struct","full_name":"Tsh::Sound::Tone","name":"Tone"},"doc":"The waveform to play the musical note on","summary":"<p>The waveform to play the musical note on</p>","instance_methods":[{"html_id":"a_sin?-instance-method","name":"a_sin?","abstract":false,"location":{"filename":"src/sounds.cr","line_number":69,"url":null},"def":{"name":"a_sin?","visibility":"Public","body":"self == ASin"}},{"html_id":"h_sin?-instance-method","name":"h_sin?","abstract":false,"location":{"filename":"src/sounds.cr","line_number":68,"url":null},"def":{"name":"h_sin?","visibility":"Public","body":"self == HSin"}},{"html_id":"noise?-instance-method","name":"noise?","abstract":false,"location":{"filename":"src/sounds.cr","line_number":66,"url":null},"def":{"name":"noise?","visibility":"Public","body":"self == Noise"}},{"html_id":"p_sin?-instance-method","name":"p_sin?","abstract":false,"location":{"filename":"src/sounds.cr","line_number":70,"url":null},"def":{"name":"p_sin?","visibility":"Public","body":"self == PSin"}},{"html_id":"saw?-instance-method","name":"saw?","abstract":false,"location":{"filename":"src/sounds.cr","line_number":64,"url":null},"def":{"name":"saw?","visibility":"Public","body":"self == Saw"}},{"html_id":"sin?-instance-method","name":"sin?","abstract":false,"location":{"filename":"src/sounds.cr","line_number":67,"url":null},"def":{"name":"sin?","visibility":"Public","body":"self == Sin"}},{"html_id":"square?-instance-method","name":"square?","abstract":false,"location":{"filename":"src/sounds.cr","line_number":65,"url":null},"def":{"name":"square?","visibility":"Public","body":"self == Square"}},{"html_id":"triangle?-instance-method","name":"triangle?","abstract":false,"location":{"filename":"src/sounds.cr","line_number":63,"url":null},"def":{"name":"triangle?","visibility":"Public","body":"self == Triangle"}}]}]}]},{"html_id":"tsh-cr/Tsh/Sprite","path":"Tsh/Sprite.html","kind":"struct","full_name":"Tsh::Sprite","name":"Sprite","abstract":false,"superclass":{"html_id":"tsh-cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"tsh-cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"tsh-cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"tsh-cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/plaything.cr","line_number":59,"url":null}],"repository_name":"tsh-cr","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tsh-cr/Tsh","kind":"module","full_name":"Tsh","name":"Tsh"},"doc":"A collection of indices to Tsh::Color with a width and a height","summary":"<p>A collection of indices to Tsh::Color with a width and a height</p>","constructors":[{"html_id":"new(sprite:Array(Array(Int)))-class-method","name":"new","abstract":false,"args":[{"name":"sprite","external_name":"sprite","restriction":"Array(Array(Int))"}],"args_string":"(sprite : Array(Array(Int)))","args_html":"(sprite : Array(Array(Int)))","location":{"filename":"src/plaything.cr","line_number":64,"url":null},"def":{"name":"new","args":[{"name":"sprite","external_name":"sprite","restriction":"Array(Array(Int))"}],"visibility":"Public","body":"_ = allocate\n_.initialize(sprite)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[](x:Int,y:Int):UInt32-instance-method","name":"[]","doc":"Gets a coordinate pixel in the sprite","summary":"<p>Gets a coordinate pixel in the sprite</p>","abstract":false,"args":[{"name":"x","external_name":"x","restriction":"Int"},{"name":"y","external_name":"y","restriction":"Int"}],"args_string":"(x : Int, y : Int) : UInt32","args_html":"(x : Int, y : Int) : UInt32","location":{"filename":"src/plaything.cr","line_number":76,"url":null},"def":{"name":"[]","args":[{"name":"x","external_name":"x","restriction":"Int"},{"name":"y","external_name":"y","restriction":"Int"}],"return_type":"UInt32","visibility":"Public","body":"return data[y][x]"}},{"html_id":"data:Array(Array(UInt32))-instance-method","name":"data","doc":"The pixel data of the sprite.\nEach number is in index to `Tsh.colors`","summary":"<p>The pixel data of the sprite.</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":62,"url":null},"def":{"name":"data","return_type":"Array(Array(UInt32))","visibility":"Public","body":"@data"}},{"html_id":"data=(data:Array(Array(UInt32)))-instance-method","name":"data=","doc":"The pixel data of the sprite.\nEach number is in index to `Tsh.colors`","summary":"<p>The pixel data of the sprite.</p>","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"Array(Array(UInt32))"}],"args_string":"(data : Array(Array(UInt32)))","args_html":"(data : Array(Array(UInt32)))","location":{"filename":"src/plaything.cr","line_number":62,"url":null},"def":{"name":"data=","args":[{"name":"data","external_name":"data","restriction":"Array(Array(UInt32))"}],"visibility":"Public","body":"@data = data"}},{"html_id":"height:Int32-instance-method","name":"height","doc":"The height of the sprite","summary":"<p>The height of the sprite</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":91,"url":null},"def":{"name":"height","return_type":"Int32","visibility":"Public","body":"return @data.size"}},{"html_id":"width:Int32-instance-method","name":"width","doc":"The size of the widest line in the sprite","summary":"<p>The size of the widest line in the sprite</p>","abstract":false,"location":{"filename":"src/plaything.cr","line_number":81,"url":null},"def":{"name":"width","return_type":"Int32","visibility":"Public","body":"widest = 0\n@data.each do |x|\n  widest = x.size > widest ? x.size : widest\nend\nreturn widest\n"}}]}]}]}}